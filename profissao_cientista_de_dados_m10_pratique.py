# -*- coding: utf-8 -*-
"""Profissao Cientista de Dados M10 Pratique.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DSMoghMWgQrDr05gPpKXXnQnW6WTIbtC

# Módulo Visualização de Dados:

# Nova seção

Leia o arquivo ecommerce_preparados.csv’ dentro de um dataframe  

Faça uma análise detalhada dos dados, descubra quais dados gostaria de destacar e crie os seguintes gráficos:


*   1 Gráfico de dispersão
*   1 Mapa de calor
*   1 Gráfico de barra
*   1 Gráfico de pizza
*   1 Gráfico de densidade

Adicione títulos nos gráficos e nos eixos para ficar claro os objetivos dos gráficos.

Fiquem a vontade para escolher a biblioteca que quiserem, não esqueçam de comentar os códigos.

Essa atividade é um pouco diferente, vocês terão que construir os códigos nesse arquivo e enviar ou o arquivo ou o link do github com o arquivo publicado para os tutores.
"""

from google.colab import files

# Fazer upload do arquivo CSV
uploaded = files.upload()

import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
from sklearn.preprocessing import MinMaxScaler

scaler = MinMaxScaler() #Calcular

df = pd.read_csv('./ecommerce_preparados.csv') #Importar CSV

df = df.dropna(subset=['Nota', 'Qtd_Vendidos', 'Marca', 'Material', 'Gênero', 'Temporada','Marca_Freq','Preço_MinMax','Desconto_MinMax']) # Colunas a serem utilizadas.

print(df.head())
print(df.info()) #Para verificações

#Gráfico de Dispersão - Utilizado para dados correlacionados.

df['Qtd_Vendidos'] = pd.to_numeric(df['Qtd_Vendidos'], errors='coerce')
top_vendidos = df.nlargest(5, 'Qtd_Vendidos')

print("Características mais comuns entre os produtos mais vendidos:")

print()

plt.figure(figsize=(8,8))
sns.scatterplot(data=df, x='Nota', y='Qtd_Vendidos', alpha=0.6)
plt.xlabel('Nota')
plt.ylabel('Quantidade Vendida')
plt.title('Relação entre Nota X Quantidade Vendida')
plt.show()

#Gráfico de Calor - Visualização da intesidade/frequência/hábitos de comportamentos.

heatmap_data = df.pivot_table(index='Temporada', values='Qtd_Vendidos', aggfunc='count')

plt.figure(figsize=(8, 6))
sns.heatmap(heatmap_data, annot=True, cmap='Oranges', fmt='.0f', cbar=True)
plt.title('Frequência de Vendas vs Temporada')
plt.xlabel('')
plt.ylabel('')
plt.show()

#Gráfico de Barras - Visualização de Categorias

media_notas = df.groupby('Material')['Nota'].mean().sort_values(ascending=False)

top_10_material = media_notas.head(10)

plt.figure(figsize=(12, 6))
sns.barplot(x=top_10_material.index, y=top_10_material.values, palette='pastel')

plt.title('Top 10 Materiais')
plt.xlabel('Material')
plt.ylabel('Nota')
plt.xticks(rotation=45)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.show()

#Gráfico de Pizza - Visualização Ideal para Porcentagens

porcentagem_genero = df[df['Gênero'].isin(['Feminino', 'Masculino'])]['Gênero'].value_counts(normalize=True) * 100

plt.figure(figsize=(6,6))
plt.pie(porcentagem_genero, labels=porcentagem_genero.index, autopct='%1.1f%%', startangle=140, colors=plt.cm.Paired.colors)
plt.title("Comparativo Gêneros")
plt.show()

#Gráfico de Densidade (KDE) - Visualização Estatítisca Suaviza Dados

plt.figure(figsize=(8,5))
sns.kdeplot(df['Preço_MinMax'], color='purple', fill=True)

plt.title("Distribuição de Preços (Normalizados)")
plt.xlabel("Preço MinMax")
plt.ylabel("Densidade")
plt.show()